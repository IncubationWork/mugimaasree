{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather for \", ctx_r0.city, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", ctx_r0.weatherData.hourly.temperature_2m[0], \"\\u00B0C\");\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    /* city!: string;\n    weatherData: any;\n           constructor(private weatherService: WeatherService) {}\n           getWeather() {\n      this.weatherService.getWeather(this.city)\n      .subscribe(data=>{\n        this.weatherData=data;\n        console.log(data);\n      });\n    } */\n    this.city = ''; // Initialize with an empty string\n  }\n\n  search() {\n    if (this.city.trim() === '') {\n      return; // Don't proceed if the city name is empty\n    }\n\n    this.weatherService.getWeatherByCity(this.city).subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 9,\n  vars: 2,\n  consts: [[\"for\", \"cityName\"], [\"type\", \"text\", \"id\", \"cityName\", \"name\", \"cityName\", \"placeholder\", \"Enter a city name\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Weather App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"label\", 0);\n      i0.ɵɵtext(4, \"City Name:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_5_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_6_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(7, \"Get Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(8, WeatherComponent_div_8_Template, 5, 2, \"div\", 3);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","city","weatherData","hourly","temperature_2m","WeatherComponent","constructor","weatherService","search","trim","getWeatherByCity","subscribe","data","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_5_listener","$event","WeatherComponent_Template_button_click_6_listener","ɵɵtemplate","WeatherComponent_div_8_Template","ɵɵproperty"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts","/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  /* city!: string;\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getWeather(this.city)\n    .subscribe(data=>{\n      this.weatherData=data;\n      console.log(data);\n    }); \n  } */\n  city: string = ''; // Initialize with an empty string\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  search() {\n    if (this.city.trim() === '') {\n      return; // Don't proceed if the city name is empty\n    }\n\n    this.weatherService.getWeatherByCity(this.city).subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n}\n","<!-- <div>\n    <h1>Weather Application</h1>\n    <form>\n      <input type=\"text\" name=\"cityName\" placeholder=\"Enter a city name\" [(ngModel)]=\"city\">\n      <button type=\"button\" (click)=\"getWeather()\">Get Weather</button>\n    </form>\n    <div *ngIf=\"weatherData\">\n      <h2>{{ weatherData.name }}</h2>\n      <p>Temperature: {{ weatherData.main.temp }}°C</p>\n      <p>Humidity: {{ weatherData.main.humidity }}%</p>\n      <p>Weather: {{ weatherData.weather[0].description }}</p>\n    </div>\n  </div> -->\n  <div>\n    <h2>Weather App</h2>\n    <label for=\"cityName\">City Name:</label>\n    <input type=\"text\" id=\"cityName\" name=\"cityName\" placeholder=\"Enter a city name\" [(ngModel)]=\"city\">\n  \n    <button (click)=\"search()\">Get Weather</button>\n  </div>\n  <div *ngIf=\"weatherData\">\n    <h3>Weather for {{ city }}</h3>\n    <p>Temperature: {{ weatherData.hourly.temperature_2m[0] }}°C</p>\n  </div>\n  "],"mappings":";;;;;;;ICoBEA,EAAA,CAAAC,cAAA,UAAyB;IACnBD,EAAA,CAAAE,MAAA,GAAsB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IAC/BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyD;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAD5DH,EAAA,CAAAI,SAAA,GAAsB;IAAtBJ,EAAA,CAAAK,kBAAA,iBAAAC,MAAA,CAAAC,IAAA,KAAsB;IACvBP,EAAA,CAAAI,SAAA,GAAyD;IAAzDJ,EAAA,CAAAK,kBAAA,kBAAAC,MAAA,CAAAE,WAAA,CAAAC,MAAA,CAAAC,cAAA,eAAyD;;;ADdhE,OAAM,MAAOC,gBAAgB;EAgB3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAflC;;;;;;;;;;IAYA,KAAAN,IAAI,GAAW,EAAE,CAAC,CAAC;EAGkC;;EAErDO,MAAMA,CAAA;IACJ,IAAI,IAAI,CAACP,IAAI,CAACQ,IAAI,EAAE,KAAK,EAAE,EAAE;MAC3B,OAAO,CAAC;;;IAGV,IAAI,CAACF,cAAc,CAACG,gBAAgB,CAAC,IAAI,CAACT,IAAI,CAAC,CAACU,SAAS,CAACC,IAAI,IAAG;MAC/D,IAAI,CAACV,WAAW,GAAGU,IAAI;IACzB,CAAC,CAAC;EACJ;;SA1BWP,gBAAgB;;mBAAhBA,MAAgB,EAAAX,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAhBV,MAAgB;EAAAW,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCK3B5B,EAAA,CAAAC,cAAA,UAAK;MACCD,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACpBH,EAAA,CAAAC,cAAA,eAAsB;MAAAD,EAAA,CAAAE,MAAA,iBAAU;MAAAF,EAAA,CAAAG,YAAA,EAAQ;MACxCH,EAAA,CAAAC,cAAA,eAAoG;MAAnBD,EAAA,CAAA8B,UAAA,2BAAAC,yDAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAtB,IAAA,GAAAyB,MAAA;MAAA,EAAkB;MAAnGhC,EAAA,CAAAG,YAAA,EAAoG;MAEpGH,EAAA,CAAAC,cAAA,gBAA2B;MAAnBD,EAAA,CAAA8B,UAAA,mBAAAG,kDAAA;QAAA,OAASJ,GAAA,CAAAf,MAAA,EAAQ;MAAA,EAAC;MAACd,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEjDH,EAAA,CAAAkC,UAAA,IAAAC,+BAAA,iBAGM;;;MAP6EnC,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAAoC,UAAA,YAAAP,GAAA,CAAAtB,IAAA,CAAkB;MAI/FP,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAoC,UAAA,SAAAP,GAAA,CAAArB,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}