{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"h2\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.latitude);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.hourly.time);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.elevation);\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.latitude = 52.52; // Default latitude\n    this.longitude = 13.41; // Default longitude\n  }\n\n  getTemperature() {\n    this.weatherService.getTemperature(this.latitude, this.longitude).subscribe(data => {\n      this.weatherData = data;\n      console.log(data);\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 13,\n  vars: 3,\n  consts: [[\"for\", \"latitude\"], [\"type\", \"number\", \"id\", \"latitude\", \"name\", \"city\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"longitude\"], [\"type\", \"number\", \"id\", \"longitude\", \"name\", \"city2\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Weather Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"label\", 0);\n      i0.ɵɵtext(5, \"Latitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 1);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.latitude = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Longitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.longitude = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_10_listener() {\n        return ctx.getTemperature();\n      });\n      i0.ɵɵtext(11, \"Get Temperature\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, WeatherComponent_div_12_Template, 7, 3, \"div\", 5);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngModel\", ctx.latitude);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.longitude);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","weatherData","latitude","hourly","time","elevation","WeatherComponent","constructor","weatherService","longitude","getTemperature","subscribe","data","console","log","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_6_listener","$event","WeatherComponent_Template_input_ngModelChange_9_listener","WeatherComponent_Template_button_click_10_listener","ɵɵtemplate","WeatherComponent_div_12_Template","ɵɵproperty"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts","/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.html"],"sourcesContent":["/* import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  city!: string;\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getWeather(this.city)\n    .subscribe(data=>{\n      this.weatherData=data;\n      console.log(data);\n    }); \n  }\n}\n */\n\nimport { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n\n  latitude: number = 52.52; // Default latitude\n  longitude: number = 13.41; // Default longitude\n  temperature!: number;\n  weatherData:any;\n\n  constructor(private weatherService: WeatherService) { }\n\n  getTemperature() {\n    this.weatherService.getTemperature(this.latitude, this.longitude)\n    .subscribe(data=>{\n      this.weatherData=data;\n      console.log(data);\n    }); \n  }\n}\n","<!-- <div>\n    <h1>Weather Application</h1>\n    <form>\n      <input type=\"text\" name=\"cityName\" placeholder=\"Enter a city name\" [(ngModel)]=\"city\">\n      <button type=\"button\" (click)=\"getWeather()\">Get Weather</button>\n    </form>\n    <div *ngIf=\"weatherData\">\n      <h2>{{ weatherData.name }}</h2>\n      <p>Temperature: {{ weatherData.main.temp }}°C</p>\n      <p>Humidity: {{ weatherData.main.humidity }}%</p>\n      <p>Weather: {{ weatherData.weather[0].description }}</p>\n    </div>\n  </div>\n   -->\n   <div>\n    <h1>Weather Application</h1>\n    <form>\n      <label for=\"latitude\">Latitude:</label>\n      <input type=\"number\" id=\"latitude\" [(ngModel)]=\"latitude\" name=\"city\">\n      <label for=\"longitude\">Longitude:</label>\n      <input type=\"number\" id=\"longitude\" [(ngModel)]=\"longitude\" name=\"city2\">\n      <button type=\"button\" (click)=\"getTemperature()\">Get Temperature</button>\n    </form>\n    <div *ngIf=\"weatherData\">\n      <h2>{{weatherData.latitude}}</h2>\n      <p>{{weatherData.hourly.time}}</p>\n      <h2>{{weatherData.elevation}}</h2>\n\n    </div>\n  </div>\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}