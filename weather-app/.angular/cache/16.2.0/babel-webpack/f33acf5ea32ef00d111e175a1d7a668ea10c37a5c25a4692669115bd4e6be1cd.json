{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.name = '';\n  }\n  getWeather() {\n    this.weatherService.getGeocodingData(this.name).subscribe(geocodingData => {\n      const latitude = geocodingData.results[0].latitude;\n      const longitude = geocodingData.results[0].longitude;\n      this.weatherService.getWeatherData(latitude, longitude).subscribe(weatherData => {\n        console.log('Weather API Response:', weatherData);\n        this.weatherData = weatherData;\n      });\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 0,\n  vars: 0,\n  template: function WeatherComponent_Template(rf, ctx) {},\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["WeatherComponent","constructor","weatherService","name","getWeather","getGeocodingData","subscribe","geocodingData","latitude","results","longitude","getWeatherData","weatherData","console","log","i0","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","template","WeatherComponent_Template","rf","ctx","styles"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts"],"sourcesContent":["/* import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  city!: string;\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getWeather(this.city)\n    .subscribe(data=>{\n      this.weatherData=data;\n      console.log(data);\n    }); \n  }\n}\n */\n\n/* import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n\n  name: string = '';\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getWeather(this.name)\n      .subscribe(data => {\n        this.weatherData = data;\n        this.getTemperature(this.weatherData.results[0].latitude, this.weatherData.results[0].longitude);\n      });\n  }\n\n  getTemperature(latitude: number, longitude: number) {\n    this.weatherService.getTemperature(latitude, longitude)\n      .subscribe(data => {\n        this.weatherData.current_weather = data;\n      });\n  }\n\n  \n} */\n\nimport { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  name: string = '';\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getGeocodingData(this.name).subscribe(geocodingData => {\n      const latitude = geocodingData.results[0].latitude;\n      const longitude = geocodingData.results[0].longitude;\n\n      this.weatherService.getWeatherData(latitude, longitude).subscribe(weatherData => {\n        console.log('Weather API Response:', weatherData);\n        this.weatherData = weatherData;\n      });\n    });\n  }\n}\n\n"],"mappings":";;;AAiEA,OAAM,MAAOA,gBAAgB;EAI3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;IAHlC,KAAAC,IAAI,GAAW,EAAE;EAGoC;EAErDC,UAAUA,CAAA;IACR,IAAI,CAACF,cAAc,CAACG,gBAAgB,CAAC,IAAI,CAACF,IAAI,CAAC,CAACG,SAAS,CAACC,aAAa,IAAG;MACxE,MAAMC,QAAQ,GAAGD,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC,CAACD,QAAQ;MAClD,MAAME,SAAS,GAAGH,aAAa,CAACE,OAAO,CAAC,CAAC,CAAC,CAACC,SAAS;MAEpD,IAAI,CAACR,cAAc,CAACS,cAAc,CAACH,QAAQ,EAAEE,SAAS,CAAC,CAACJ,SAAS,CAACM,WAAW,IAAG;QAC9EC,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEF,WAAW,CAAC;QACjD,IAAI,CAACA,WAAW,GAAGA,WAAW;MAChC,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;;SAhBWZ,gBAAgB;;mBAAhBA,MAAgB,EAAAe,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAhBlB,MAAgB;EAAAmB,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;EAAAC,MAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}