{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nfunction WeatherComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const day_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(day_r1.dt_txt);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", day_r1.main.temp, \" K\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Weather: \", day_r1.weather[0].description, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Humidity: \", day_r1.main.humidity, \"%\");\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n  }\n  getWeather() {\n    this.weatherService.getWeather(this.city).subscribe(data => {\n      this.weatherData = data.list;\n      console.log(data);\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[1, \"weather\"], [3, \"click\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_3_listener() {\n        return ctx.getWeather();\n      });\n      i0.ɵɵtext(4, \"Get Weather\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, WeatherComponent_div_5_Template, 9, 4, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵtextInterpolate1(\"Weather Forecast for \", ctx.city, \"\");\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngForOf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgForOf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","day_r1","dt_txt","ɵɵtextInterpolate1","main","temp","weather","description","humidity","WeatherComponent","constructor","weatherService","getWeather","city","subscribe","data","weatherData","list","console","log","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_button_click_3_listener","ɵɵtemplate","WeatherComponent_div_5_Template","ɵɵproperty"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts","/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  city!: string;\n  weatherData: any;\n\n  constructor(private weatherService: WeatherService) {}\n\n  getWeather() {\n    this.weatherService.getWeather(this.city)\n    .subscribe(data=>{\n      this.weatherData=data.list;\n      console.log(data);\n    }); \n  }\n}\n","<div class=\"weather\">\n  <h2>Weather Forecast for {{ city }}</h2>\n  <button (click)=\"getWeather()\">Get Weather</button>\n\n  <div *ngFor=\"let day of weatherData\">\n    <h3>{{ day.dt_txt }}</h3>\n    <p>Temperature: {{ day.main.temp }} K</p>\n    <p>Weather: {{ day.weather[0].description }}</p>\n    <p>Humidity: {{ day.main.humidity }}%</p>\n    <!-- Display other weather information as needed -->\n  </div>\n</div>\n"],"mappings":";;;;;;ICIEA,EAAA,CAAAC,cAAA,UAAqC;IAC/BD,EAAA,CAAAE,MAAA,GAAgB;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACzBH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IACzCH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAyC;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAChDH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAHrCH,EAAA,CAAAI,SAAA,GAAgB;IAAhBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,MAAA,CAAgB;IACjBP,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAQ,kBAAA,kBAAAF,MAAA,CAAAG,IAAA,CAAAC,IAAA,OAAkC;IAClCV,EAAA,CAAAI,SAAA,GAAyC;IAAzCJ,EAAA,CAAAQ,kBAAA,cAAAF,MAAA,CAAAK,OAAA,IAAAC,WAAA,KAAyC;IACzCZ,EAAA,CAAAI,SAAA,GAAkC;IAAlCJ,EAAA,CAAAQ,kBAAA,eAAAF,MAAA,CAAAG,IAAA,CAAAI,QAAA,MAAkC;;;ADAzC,OAAM,MAAOC,gBAAgB;EAI3BC,YAAoBC,cAA8B;IAA9B,KAAAA,cAAc,GAAdA,cAAc;EAAmB;EAErDC,UAAUA,CAAA;IACR,IAAI,CAACD,cAAc,CAACC,UAAU,CAAC,IAAI,CAACC,IAAI,CAAC,CACxCC,SAAS,CAACC,IAAI,IAAE;MACf,IAAI,CAACC,WAAW,GAACD,IAAI,CAACE,IAAI;MAC1BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;SAZWN,gBAAgB;;mBAAhBA,MAAgB,EAAAd,EAAA,CAAAyB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAhBb,MAAgB;EAAAc,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCR7BlC,EAAA,CAAAC,cAAA,aAAqB;MACfD,EAAA,CAAAE,MAAA,GAA+B;MAAAF,EAAA,CAAAG,YAAA,EAAK;MACxCH,EAAA,CAAAC,cAAA,gBAA+B;MAAvBD,EAAA,CAAAoC,UAAA,mBAAAC,kDAAA;QAAA,OAASF,GAAA,CAAAlB,UAAA,EAAY;MAAA,EAAC;MAACjB,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAEnDH,EAAA,CAAAsC,UAAA,IAAAC,+BAAA,iBAMM;MACRvC,EAAA,CAAAG,YAAA,EAAM;;;MAVAH,EAAA,CAAAI,SAAA,GAA+B;MAA/BJ,EAAA,CAAAQ,kBAAA,0BAAA2B,GAAA,CAAAjB,IAAA,KAA+B;MAGdlB,EAAA,CAAAI,SAAA,GAAc;MAAdJ,EAAA,CAAAwC,UAAA,YAAAL,GAAA,CAAAd,WAAA,CAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}