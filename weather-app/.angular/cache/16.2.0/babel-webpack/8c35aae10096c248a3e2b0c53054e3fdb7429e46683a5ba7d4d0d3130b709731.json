{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let WetherForecastComponent = class WetherForecastComponent {\n  constructor() {\n    this.forecastDates = [];\n    this.shiftLeft = false;\n    this.shifRight = false;\n    this.weeklyTemperatureData = [];\n    this.currentDate = new Date();\n    this.currentIndex = 0;\n    this.days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n    this.calculateForecastDates();\n  }\n  getCurrentDayName(index) {\n    const todayIndex = this.currentDate.getDay();\n    const dayIndex = (todayIndex + index) % 7;\n    return this.days[dayIndex];\n  }\n  calculateForecastDates() {\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(currentDate.getDate() + i);\n      this.forecastDates.push(nextDate);\n    }\n  }\n  navigateForecast(direction) {\n    if (direction === 'prev') {\n      this.forecastDates.push(this.forecastDates.shift());\n      this.shiftLeft = true;\n      setTimeout(() => this.shiftLeft = false, 500);\n    } else if (direction === 'next') {\n      this.forecastDates.unshift(this.forecastDates.pop());\n      this.shifRight = true;\n      setTimeout(() => this.shifRight = false, 500);\n    }\n  }\n};\n__decorate([Input()], WetherForecastComponent.prototype, \"weeklyTemperatureData\", void 0);\n__decorate([Input()], WetherForecastComponent.prototype, \"weatherData\", void 0);\nWetherForecastComponent = __decorate([Component({\n  selector: 'app-wether-forecast',\n  templateUrl: './wether-forecast.component.html',\n  styleUrls: ['./wether-forecast.component.css']\n})], WetherForecastComponent);","map":{"version":3,"names":["Component","Input","WetherForecastComponent","constructor","forecastDates","shiftLeft","shifRight","weeklyTemperatureData","currentDate","Date","currentIndex","days","calculateForecastDates","getCurrentDayName","index","todayIndex","getDay","dayIndex","i","nextDate","setDate","getDate","push","navigateForecast","direction","shift","setTimeout","unshift","pop","__decorate","selector","templateUrl","styleUrls"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/wether-forecast/wether-forecast.component.ts"],"sourcesContent":["import { Component ,Input} from '@angular/core';\n\n\n@Component({\n  selector: 'app-wether-forecast',\n  templateUrl: './wether-forecast.component.html',\n  styleUrls: ['./wether-forecast.component.css']\n})\nexport class WetherForecastComponent {\n  forecastDates : Date[] = [];\n\nshiftLeft=false;\nshifRight=false;\n\n\n  @Input() weeklyTemperatureData: number[] = [];\n  @Input() weatherData: any; \n  currentDate: Date = new Date();\n\n  currentIndex: number = 0;\n\n  days: string[] = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n\nconstructor() {\n  this.calculateForecastDates();\n}\n  getCurrentDayName(index: number): string {\n    const todayIndex = this.currentDate.getDay();\n    const dayIndex = (todayIndex + index) % 7;\n    return this.days[dayIndex];\n  }\n\n  calculateForecastDates(){\n    const currentDate = new Date();\n    for (let i = 0; i < 7; i++) {\n      const nextDate = new Date(currentDate);\n      nextDate.setDate(currentDate.getDate() + i);\n      this.forecastDates.push(nextDate);\n    }\n  }\n\n\n  navigateForecast(direction: 'prev' | 'next') {\n    if (direction === 'prev') {\n        this.forecastDates.push(this.forecastDates.shift()!);\n        this.shiftLeft=true;\n        setTimeout(()=>(this.shiftLeft=false),500);\n      }\n     else if (direction === 'next') {\n      this.forecastDates.unshift(this.forecastDates.pop()!);\n      this.shifRight=true;\n      setTimeout(()=>(this.shifRight=false),500);\n    }\n  }\n}\n\n\n\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAO,eAAe;AAQxC,WAAMC,uBAAuB,GAA7B,MAAMA,uBAAuB;EAepCC,YAAA;IAdE,KAAAC,aAAa,GAAY,EAAE;IAE7B,KAAAC,SAAS,GAAC,KAAK;IACf,KAAAC,SAAS,GAAC,KAAK;IAGJ,KAAAC,qBAAqB,GAAa,EAAE;IAE7C,KAAAC,WAAW,GAAS,IAAIC,IAAI,EAAE;IAE9B,KAAAC,YAAY,GAAW,CAAC;IAExB,KAAAC,IAAI,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,WAAW,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,CAAC;IAG/F,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EACEC,iBAAiBA,CAACC,KAAa;IAC7B,MAAMC,UAAU,GAAG,IAAI,CAACP,WAAW,CAACQ,MAAM,EAAE;IAC5C,MAAMC,QAAQ,GAAG,CAACF,UAAU,GAAGD,KAAK,IAAI,CAAC;IACzC,OAAO,IAAI,CAACH,IAAI,CAACM,QAAQ,CAAC;EAC5B;EAEAL,sBAAsBA,CAAA;IACpB,MAAMJ,WAAW,GAAG,IAAIC,IAAI,EAAE;IAC9B,KAAK,IAAIS,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;MAC1B,MAAMC,QAAQ,GAAG,IAAIV,IAAI,CAACD,WAAW,CAAC;MACtCW,QAAQ,CAACC,OAAO,CAACZ,WAAW,CAACa,OAAO,EAAE,GAAGH,CAAC,CAAC;MAC3C,IAAI,CAACd,aAAa,CAACkB,IAAI,CAACH,QAAQ,CAAC;;EAErC;EAGAI,gBAAgBA,CAACC,SAA0B;IACzC,IAAIA,SAAS,KAAK,MAAM,EAAE;MACtB,IAAI,CAACpB,aAAa,CAACkB,IAAI,CAAC,IAAI,CAAClB,aAAa,CAACqB,KAAK,EAAG,CAAC;MACpD,IAAI,CAACpB,SAAS,GAAC,IAAI;MACnBqB,UAAU,CAAC,MAAK,IAAI,CAACrB,SAAS,GAAC,KAAM,EAAC,GAAG,CAAC;KAC3C,MACG,IAAImB,SAAS,KAAK,MAAM,EAAE;MAC9B,IAAI,CAACpB,aAAa,CAACuB,OAAO,CAAC,IAAI,CAACvB,aAAa,CAACwB,GAAG,EAAG,CAAC;MACrD,IAAI,CAACtB,SAAS,GAAC,IAAI;MACnBoB,UAAU,CAAC,MAAK,IAAI,CAACpB,SAAS,GAAC,KAAM,EAAC,GAAG,CAAC;;EAE9C;CACD;AAvCUuB,UAAA,EAAR5B,KAAK,EAAE,C,qEAAsC;AACrC4B,UAAA,EAAR5B,KAAK,EAAE,C,2DAAkB;AARfC,uBAAuB,GAAA2B,UAAA,EALnC7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,qBAAqB;EAC/BC,WAAW,EAAE,kCAAkC;EAC/CC,SAAS,EAAE,CAAC,iCAAiC;CAC9C,CAAC,C,EACW9B,uBAAuB,CA8CnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}