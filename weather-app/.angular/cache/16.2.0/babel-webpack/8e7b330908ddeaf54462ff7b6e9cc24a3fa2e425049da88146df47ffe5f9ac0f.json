{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"Weather for Latitude: \", ctx_r0.latitude, \", Longitude: \", ctx_r0.longitude, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Temperature: \", ctx_r0.weatherData.hourly.temperature_2m[0], \"\\u00B0C\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.results.name);\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n    this.latitude = 52.52;\n    this.longitude = 13.41;\n    this.name = '';\n  }\n  search() {\n    this.weatherService.getWeather(this.latitude, this.longitude).subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 13,\n  vars: 4,\n  consts: [[\"type\", \"text\", \"id\", \"latitude\", \"name\", \"latitude\", \"placeholder\", \"Enter latitude\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"latitude\"], [\"for\", \"longitude\"], [\"type\", \"text\", \"id\", \"longitude\", \"name\", \"longitude\", \"placeholder\", \"Enter longitude\", 3, \"ngModel\", \"ngModelChange\"], [3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n      i0.ɵɵtext(2, \"Weather App\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_3_listener($event) {\n        return ctx.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"label\", 1);\n      i0.ɵɵtext(5, \"Latitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_6_listener($event) {\n        return ctx.latitude = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"label\", 2);\n      i0.ɵɵtext(8, \"Longitude:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.longitude = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_10_listener() {\n        return ctx.search();\n      });\n      i0.ɵɵtext(11, \"Get Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(12, WeatherComponent_div_12_Template, 7, 4, \"div\", 5);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.name);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.latitude);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngModel\", ctx.longitude);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate2","ctx_r0","latitude","longitude","ɵɵtextInterpolate1","weatherData","hourly","temperature_2m","ɵɵtextInterpolate","results","name","WeatherComponent","constructor","weatherService","search","getWeather","subscribe","data","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_3_listener","$event","WeatherComponent_Template_input_ngModelChange_6_listener","WeatherComponent_Template_input_ngModelChange_9_listener","WeatherComponent_Template_button_click_10_listener","ɵɵtemplate","WeatherComponent_div_12_Template","ɵɵproperty"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts","/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\n  latitude: number = 52.52;\n  longitude: number = 13.41;\n  weatherData: any;\n  name:string='';\n\n  constructor(private weatherService: WeatherService) {}\n\n  search() {\n    this.weatherService.getWeather(this.latitude, this.longitude).subscribe(data => {\n      this.weatherData = data;\n    });\n  }\n}\n","<div>\n  <h2>Weather App</h2>\n  <input type=\"text\" id=\"latitude\" name=\"latitude\" placeholder=\"Enter latitude\" [(ngModel)]=\"name\">\n\n  <label for=\"latitude\">Latitude:</label>\n  <input type=\"text\" id=\"latitude\" name=\"latitude\" placeholder=\"Enter latitude\" [(ngModel)]=\"latitude\">\n\n  <label for=\"longitude\">Longitude:</label>\n  <input type=\"text\" id=\"longitude\" name=\"longitude\" placeholder=\"Enter longitude\" [(ngModel)]=\"longitude\">\n\n  <button (click)=\"search()\">Get Weather</button>\n</div>\n<div *ngIf=\"weatherData\">\n  <h3>Weather for Latitude: {{ latitude }}, Longitude: {{ longitude }}</h3>\n  <p>Temperature: {{ weatherData.hourly.temperature_2m[0] }}°C</p>\n  <p>{{weatherData.results.name}}</p>\n</div>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}