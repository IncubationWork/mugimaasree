{"ast":null,"code":"var _class;\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nfunction WeatherComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.weatherData.name);\n  }\n}\nexport class WeatherComponent {\n  constructor(weatherService) {\n    this.weatherService = weatherService;\n  }\n  ngOnInit() {}\n  getWeather() {\n    this.weatherService.getWeather(this.city).subscribe(data => {\n      this.weatherData = data;\n      console.log(data);\n    });\n  }\n}\n_class = WeatherComponent;\n_class.ɵfac = function WeatherComponent_Factory(t) {\n  return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n};\n_class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: _class,\n  selectors: [[\"app-weather\"]],\n  decls: 8,\n  vars: 2,\n  consts: [[\"type\", \"text\", \"name\", \"cityName\", \"placeholder\", \"Enter a city name\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"button\", 3, \"click\"], [4, \"ngIf\"]],\n  template: function WeatherComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\")(1, \"h1\");\n      i0.ɵɵtext(2, \"Weather Application\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\")(4, \"input\", 0);\n      i0.ɵɵlistener(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_4_listener($event) {\n        return ctx.city = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"button\", 1);\n      i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_5_listener() {\n        return ctx.getWeather();\n      });\n      i0.ɵɵtext(6, \"Get Weather\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(7, WeatherComponent_div_7_Template, 3, 1, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.city);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", ctx.weatherData);\n    }\n  },\n  dependencies: [i2.NgIf],\n  styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","weatherData","name","WeatherComponent","constructor","weatherService","ngOnInit","getWeather","city","subscribe","data","console","log","ɵɵdirectiveInject","i1","WeatherService","selectors","decls","vars","consts","template","WeatherComponent_Template","rf","ctx","ɵɵlistener","WeatherComponent_Template_input_ngModelChange_4_listener","$event","WeatherComponent_Template_button_click_5_listener","ɵɵtemplate","WeatherComponent_div_7_Template","ɵɵproperty"],"sources":["/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.ts","/home/inc3598/Documents/MyWork/angular/weather-app/src/app/weather/weather.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { WeatherService } from '../weather.service';\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.css']\n})\nexport class WeatherComponent {\ncity!:string;\nweatherData:any;\n\nconstructor(private weatherService:WeatherService){}\nngOnInit(){}\ngetWeather(){\n  this.weatherService.getWeather(this.city).subscribe(data=>{\n    this.weatherData=data;\n    console.log(data);\n  })\n}\n}\n","<div>\n    <h1>Weather Application</h1>\n    <form>\n        <input type=\"text\" name=\"cityName\" placeholder=\"Enter a city name\" [(ngModel)]=\"city\">\n        <button type=\"button\" (click)=\"getWeather()\">Get Weather</button>\n    </form>\n    <div *ngIf=\"weatherData\">\n        <h2>{{weatherData.name}}</h2>\n    </div>\n</div>"],"mappings":";;;;;;ICMIA,EAAA,CAAAC,cAAA,UAAyB;IACjBD,EAAA,CAAAE,MAAA,GAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAK;;;;IAAzBH,EAAA,CAAAI,SAAA,GAAoB;IAApBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,WAAA,CAAAC,IAAA,CAAoB;;;ADAhC,OAAM,MAAOC,gBAAgB;EAI7BC,YAAoBC,cAA6B;IAA7B,KAAAA,cAAc,GAAdA,cAAc;EAAiB;EACnDC,QAAQA,CAAA,GAAG;EACXC,UAAUA,CAAA;IACR,IAAI,CAACF,cAAc,CAACE,UAAU,CAAC,IAAI,CAACC,IAAI,CAAC,CAACC,SAAS,CAACC,IAAI,IAAE;MACxD,IAAI,CAACT,WAAW,GAACS,IAAI;MACrBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC;EACJ;;SAXaP,gBAAgB;;mBAAhBA,MAAgB,EAAAT,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;;QAAhBZ,MAAgB;EAAAa,SAAA;EAAAC,KAAA;EAAAC,IAAA;EAAAC,MAAA;EAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;IAAA,IAAAD,EAAA;MCP7B5B,EAAA,CAAAC,cAAA,UAAK;MACGD,EAAA,CAAAE,MAAA,0BAAmB;MAAAF,EAAA,CAAAG,YAAA,EAAK;MAC5BH,EAAA,CAAAC,cAAA,WAAM;MACiED,EAAA,CAAA8B,UAAA,2BAAAC,yDAAAC,MAAA;QAAA,OAAAH,GAAA,CAAAf,IAAA,GAAAkB,MAAA;MAAA,EAAkB;MAArFhC,EAAA,CAAAG,YAAA,EAAsF;MACtFH,EAAA,CAAAC,cAAA,gBAA6C;MAAvBD,EAAA,CAAA8B,UAAA,mBAAAG,kDAAA;QAAA,OAASJ,GAAA,CAAAhB,UAAA,EAAY;MAAA,EAAC;MAACb,EAAA,CAAAE,MAAA,kBAAW;MAAAF,EAAA,CAAAG,YAAA,EAAS;MAErEH,EAAA,CAAAkC,UAAA,IAAAC,+BAAA,iBAEM;MACVnC,EAAA,CAAAG,YAAA,EAAM;;;MANqEH,EAAA,CAAAI,SAAA,GAAkB;MAAlBJ,EAAA,CAAAoC,UAAA,YAAAP,GAAA,CAAAf,IAAA,CAAkB;MAGnFd,EAAA,CAAAI,SAAA,GAAiB;MAAjBJ,EAAA,CAAAoC,UAAA,SAAAP,GAAA,CAAAtB,WAAA,CAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}