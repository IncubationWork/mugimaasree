{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../weather.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction WeatherComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1, \"Please enter a city name.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction WeatherComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8);\n    i0.ɵɵelement(2, \"img\", 9);\n    i0.ɵɵelementStart(3, \"div\", 10)(4, \"h2\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"div\", 12)(7, \"h2\");\n    i0.ɵɵtext(8, \"Latitude: \");\n    i0.ɵɵelementStart(9, \"span\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"h2\");\n    i0.ɵɵtext(12, \"Longitude: \");\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 13)(16, \"div\");\n    i0.ɵɵelement(17, \"img\", 14);\n    i0.ɵɵelementStart(18, \"span\", 15);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(20, \"div\", 16);\n    i0.ɵɵelement(21, \"img\", 17);\n    i0.ɵɵelementStart(22, \"span\");\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(24, \"div\", 18);\n    i0.ɵɵelement(25, \"img\", 19);\n    i0.ɵɵelementStart(26, \"span\");\n    i0.ɵɵtext(27);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(28, \"div\", 20)(29, \"div\");\n    i0.ɵɵelement(30, \"img\", 21);\n    i0.ɵɵelementStart(31, \"p\")(32, \"span\", 22);\n    i0.ɵɵtext(33);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(34, \"p\");\n    i0.ɵɵtext(35, \"Time:\");\n    i0.ɵɵelementStart(36, \"span\");\n    i0.ɵɵtext(37);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", ctx_r1.getWeatherImage(), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\"\", ctx_r1.weatherData.results[0].name, \" / \", ctx_r1.weatherData.results[0].country, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.results[0].latitude, \" N\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.results[0].longitude, \" E\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.weatherData.weather.current_weather.temperature, \" \\u00B0C\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.weather.hourly.relativehumidity_2m[0], \" %\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.weatherData.weather.current_weather.windspeed, \" km/h\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", ctx_r1.getWeatherIcon(ctx_r1.weatherData.weather.current_weather.weathercode), i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getWeatherDescription(ctx_r1.weatherData.weather.current_weather.weathercode), \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r1.weatherData.weather.current_weather.time);\n  }\n}\nexport let WeatherComponent = /*#__PURE__*/(() => {\n  var _class;\n  class WeatherComponent {\n    constructor(weatherService) {\n      this.weatherService = weatherService;\n      this.location = 'tenkasi';\n      this.showError = false;\n      this.count = 10;\n      this.filteredLocations = [];\n    }\n    ngOnInit() {\n      this.search();\n    }\n    getWeather() {\n      if (this.location.trim() === '') {\n        this.showError = true;\n        return;\n      }\n      this.showError = false;\n      this.weatherService.getWeather(this.location).subscribe(data => {\n        this.weatherData = data;\n        this.getTemperature(this.weatherData.results[0].latitude, this.weatherData.results[0].longitude);\n      });\n    }\n    getTemperature(latitude, longitude) {\n      this.weatherService.getTemperature(latitude, longitude).subscribe(data => {\n        this.weatherData.weather = data;\n      });\n    }\n    search() {\n      this.getWeather();\n    }\n    getWeatherDescription(weatherCode) {\n      switch (weatherCode) {\n        case 0:\n          return 'Clear sky';\n        case 1:\n          return 'Mainlyclear';\n        case 2:\n          return 'partlycloudy';\n        case 3:\n          return 'overcast';\n        case 45:\n          return 'Fog';\n        case 48:\n          return 'depositing rime fog';\n        case 51:\n          return 'Drizzle: Light';\n        case 53:\n          return 'moderate';\n        case 55:\n          return 'dense intensity';\n        case 56:\n          return 'Freezing Drizzle: Light';\n        case 57:\n          return 'dense intensity';\n        case 61:\n          return 'Rain: Slight';\n        case 63:\n          return 'moderate';\n        case 65:\n          return 'heavy intensity';\n        case 66:\n          return 'Freezing Rain: Light';\n        case 67:\n          return 'heavy intensity';\n        case 71:\n          return 'Snow fall: Slight';\n        case 73:\n          return 'moderate';\n        case 75:\n          return 'heavy intensity';\n        case 77:\n          return 'Snow grains';\n        case 80:\n          return 'Rain showers: Slight';\n        case 81:\n          return 'moderate';\n        case 82:\n          return 'violent';\n        case 85:\n          return 'Snow showers slight';\n        case 86:\n          return 'heavy';\n        case 95:\n          return 'Thunderstorm: Slight or moderate';\n        case 96:\n          return 'Thunderstorm with slight';\n        case 99:\n          return 'heavy hail';\n        default:\n          return 'Unknown';\n      }\n    }\n    getWeatherImage() {\n      if (this.weatherData && this.weatherData.weather) {\n        const weatherCode = this.weatherData.weather.current_weather.weathercode;\n        const temperature = this.weatherData.weather.current_weather.temperature;\n        if (weatherCode === 0) {\n          return '../assets/pic2.jpg';\n        } else if (weatherCode === 1) {\n          return '../assets/pic3.jpg';\n        } else if (temperature < 10) {\n          return '../assets/pic4.jpg';\n        } else {\n          return '../assets/pic5.jpg';\n        }\n      }\n      return '../assets/pic5.jpg';\n    }\n    getWeatherIcon(weatherCode) {\n      const iconBaseUrl = 'http://openweathermap.org/img/wn/';\n      switch (weatherCode) {\n        case 0:\n          return iconBaseUrl + '01d@2x.png';\n        case 1:\n          return iconBaseUrl + '01d@2x.png';\n        case 2:\n          return iconBaseUrl + '02d@2x.png';\n        case 3:\n          return iconBaseUrl + '02d@2x.png';\n        case 51:\n          return iconBaseUrl + '10d@2x.png';\n        case 56:\n          return iconBaseUrl + '10d@2x.png';\n        case 61:\n          return iconBaseUrl + '10d@2x.png';\n        case 95:\n          return iconBaseUrl + '11d@2x.png';\n        case 96:\n          return iconBaseUrl + '11d@2x.png';\n        default:\n          return iconBaseUrl + '01d@2x.png';\n      }\n    }\n    clearLocation() {\n      this.location = '';\n    }\n  }\n  _class = WeatherComponent;\n  _class.ɵfac = function WeatherComponent_Factory(t) {\n    return new (t || _class)(i0.ɵɵdirectiveInject(i1.WeatherService));\n  };\n  _class.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: _class,\n    selectors: [[\"app-weather\"]],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"container\"], [1, \"h1\"], [\"id\", \"search\"], [\"type\", \"text\", \"name\", \"cityName\", \"placeholder\", \"Enter a city name\", \"id\", \"searchInput\", 3, \"ngModel\", \"focus\", \"ngModelChange\", \"keydown.enter\"], [\"type\", \"button\", 1, \"searchControl\", 3, \"click\"], [\"class\", \"error-message\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"error-message\"], [1, \"card\"], [\"id\", \"weather-image\", \"alt\", \"Weather Image\", 3, \"src\"], [\"id\", \"weather-description\"], [1, \"location\"], [1, \"weather-description\"], [1, \"temp\"], [\"src\", \"../assets/pic15.png\", 1, \"image\"], [1, \"span\"], [\"id\", \"humunity\"], [\"src\", \"../assets/pic14.png\", 1, \"image\"], [1, \"windspeed\"], [\"src\", \"../assets/pic13.png\", 1, \"image\"], [1, \"time\"], [\"id\", \"icon-image\", 3, \"src\"], [1, \"p\"]],\n    template: function WeatherComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Weather Application\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2)(4, \"input\", 3);\n        i0.ɵɵlistener(\"focus\", function WeatherComponent_Template_input_focus_4_listener() {\n          return ctx.clearLocation();\n        })(\"ngModelChange\", function WeatherComponent_Template_input_ngModelChange_4_listener($event) {\n          return ctx.location = $event;\n        })(\"keydown.enter\", function WeatherComponent_Template_input_keydown_enter_4_listener() {\n          return ctx.getWeather();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function WeatherComponent_Template_button_click_5_listener() {\n          return ctx.search();\n        });\n        i0.ɵɵtext(6, \"Get Weather\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(7, WeatherComponent_div_7_Template, 2, 0, \"div\", 5);\n        i0.ɵɵtemplate(8, WeatherComponent_div_8_Template, 38, 11, \"div\", 6);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.location);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.showError);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.weatherData && ctx.weatherData.weather);\n      }\n    },\n    dependencies: [i2.NgIf, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.NgModel, i3.NgForm],\n    styles: [\"*[_ngcontent-%COMP%]{margin:0;padding:0;box-sizing:border-box}.container[_ngcontent-%COMP%]{background-color:#87cfeb89;height:100vh;width:100vw;position:fixed;left:0;right:0;top:0;padding:20px}form[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;padding:30px;gap:5px}.card[_ngcontent-%COMP%]{background-color:#87ceeb;margin:auto;width:500px;height:80%;box-shadow:0 6px 10px #0000004d;transition:.3s;border-radius:2%}.h1[_ngcontent-%COMP%]{color:navy;text-align:center}#searchInput[_ngcontent-%COMP%]{color:#29292f;background-color:#e8e4e6;border:none;padding:10px 25px;text-align:center;text-decoration:none;font-size:18px;outline:none}.searchControl[_ngcontent-%COMP%]{background-color:#daa520;color:var(--button-text);border:none;padding:10px 15px;text-align:center;text-decoration:none;font-size:16px;cursor:pointer}#weather-image[_ngcontent-%COMP%]{object-fit:cover;width:100%;max-height:230px;border-radius:2% 2% 0 0}#weather-description[_ngcontent-%COMP%]{display:flex;margin:0 30px 0 40px;height:80px;width:80%;justify-content:space-between;align-items:center;border-bottom:1px solid rgba(241,239,239,.17)}.location[_ngcontent-%COMP%]{color:#fff;font-weight:800;font-size:35px}.weather-description[_ngcontent-%COMP%]{display:flex;width:100%;height:70px;justify-content:space-evenly;align-items:center}h2[_ngcontent-%COMP%]{color:#fffffff5}span[_ngcontent-%COMP%]{color:#0c3a4ce9}#humunity[_ngcontent-%COMP%]{position:relative;left:-100px;top:25px}.temp[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:space-between;width:90%;margin:auto;gap:50px;position:relative}.error-message[_ngcontent-%COMP%]{height:10px;width:80%;color:red;position:relative;left:250px;top:-20px;text-align:center}p[_ngcontent-%COMP%]{font-size:20px;color:#fff;font-weight:600}.p[_ngcontent-%COMP%]{font-size:25px;color:#2a34398a}.span[_ngcontent-%COMP%]{color:wheat;font-size:35px;font-weight:800}.weathercode[_ngcontent-%COMP%], .windspeed[_ngcontent-%COMP%]{padding:10px 10px 0 30px}.time[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:20px;justify-content:space-between}.image[_ngcontent-%COMP%]{height:40px;width:40px}@media (min-width:320px){.error-message[_ngcontent-%COMP%]{color:red;position:relative;left:100px;top:-20px}.card[_ngcontent-%COMP%]{background-color:#87ceeb;margin:auto;width:470px;height:80%;box-shadow:0 6px 10px #0000004d;transition:.3s;border-radius:2%}}\"]\n  });\n  return WeatherComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}